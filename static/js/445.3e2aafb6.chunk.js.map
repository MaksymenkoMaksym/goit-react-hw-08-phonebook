{"version":3,"file":"static/js/445.3e2aafb6.chunk.js","mappings":"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","sources":["components/PhoneBookForm/PhoneBookForm.styled.js","components/ContactsList/ContactList.styled.js","components/InputName/Input.styled.js","components/InputName/InputName.jsx","components/PhoneBookForm/PhoneBookForm.jsx","components/ContactsList/ContactsList.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/InputSearch/InputSearch.jsx","redux/contacts/contactsSelectors.js","components/Loader/Loader.jsx","pages/Home.js","redux/auth/selectorsAuth.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  width: 500px;\n  margin-right: auto;\n  margin-left: auto;\n  text-align: center;\n`;\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 5px;\n  background-color: hotpink;\n  font-size: 15px;\n  border-radius: 4px;\n  color: black;\n  font-weight: bold;\n  &:hover {\n    color: white;\n  }\n`;\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  flex-grow: 1;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  height: 280px;\n  overflow: scroll;\n`;\nexport const Li = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n`;\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  display: block;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const Input = styled.input`\n  background-color: #d160a7b8;\n  color: black;\n  display: block;\n  width: 300px;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  margin-bottom: 10px;\n  padding: 10px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { Label, Span, Input } from './Input.styled';\nconst InputName = ({\n  mainTitle,\n  type,\n  name,\n  title,\n  pattern,\n  handleChange,\n  value,\n}) => (\n  <Label>\n    <Span>{mainTitle}</Span>\n    <Input\n      type={type}\n      name={name}\n      pattern={pattern}\n      title={title}\n      value={value}\n      onChange={handleChange}\n      required\n    />\n  </Label>\n);\nInputName.propTypes = {\n  mainTitle: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  pattern: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\nexport default InputName;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { Form } from './PhoneBookForm.styled';\nimport { Button } from 'components/ContactsList/ContactList.styled';\nimport InputName from '../InputName/InputName';\n\nconst PhoneBookForm = ({ onInputContact }) => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onInputContact({ name, number: phone });\n  };\n\n  const handleChange = evt => {\n    if (evt.target.name === 'name') {\n      setName(evt.target.value);\n    } else {\n      setPhone(evt.target.value);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputName\n        type=\"text\"\n        name=\"name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        mainTitle=\"Name\"\n        defaultValue=\"Bob\"\n        value={name}\n        handleChange={handleChange}\n      />\n      <InputName\n        type=\"tel\"\n        name=\"phone\"\n        title=\"Phone phone must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        mainTitle=\"Phone\"\n        defaultValue=\"+1\"\n        value={phone}\n        handleChange={handleChange}\n      />\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n\nPhoneBookForm.propTypes = {\n  onInputContact: PropTypes.func.isRequired,\n};\nexport default PhoneBookForm;\n","import PropTypes from 'prop-types';\n\nimport { Button, Ul, Li } from './ContactList.styled';\n\nconst ContactsList = ({ contacts, onClickDelete }) => {\n  if (!contacts.length) {\n    return <p>No any data</p>;\n  }\n  return (\n    <>\n      <Ul>\n        {contacts.map(contact => (\n          <Li key={contact.id}>\n            {contact.name}:\n            <span style={{ margin: '0 200px 0 auto' }}>{contact.number}</span>\n            <Button type=\"button\" onClick={() => onClickDelete(contact.id)}>\n              Delete\n            </Button>\n          </Li>\n        ))}\n      </Ul>\n    </>\n  );\n};\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n\n  onClickDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;\n","import styled from '@emotion/styled';\n\nexport const SectionStyled = styled.section`\n  position: relative;\n  width: 800px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 15px;\n  border-radius: 20px;\n  border: 2px solid blueviolet;\n  margin-bottom: 20px;\n`;\nexport const TitleSection = styled.h1`\n  width: fit-content;\n  margin: 0 auto 20px;\n  color: #256988;\n`;\n","import PropTypes from 'prop-types';\nimport { SectionStyled, TitleSection } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <SectionStyled>\n      <TitleSection>{title}</TitleSection>\n      {children}\n    </SectionStyled>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nimport { Label, Input, Span } from 'components/InputName/Input.styled';\n\nconst InputSearch = ({ nameSearch, onSearchName }) => {\n  return (\n    <Label>\n      <Span>{nameSearch}</Span>\n      <Input\n        type=\"text\"\n        placeholder=\"Search by name\"\n        onChange={e => onSearchName(e.target.value)}\n      ></Input>\n    </Label>\n  );\n};\n\nInputSearch.propTypes = {\n  nameSearch: PropTypes.string.isRequired,\n  onSearchName: PropTypes.func.isRequired,\n};\nexport default InputSearch;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n","import { RotatingLines } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport const Loader = () => (\n  <RotatingLines\n    strokeColor=\"pink\"\n    strokeWidth=\"5\"\n    animationDuration=\"0.75\"\n    width=\"96\"\n    visible={true}\n  />\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport PhoneBookForm from 'components/PhoneBookForm/PhoneBookForm';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport Section from 'components/Section/Section';\nimport InputSearch from 'components/InputSearch/InputSearch';\nimport { getContacts, getFilter } from 'redux/contacts/contactsSelectors';\nimport { getAuth } from 'redux/auth/selectorsAuth';\n\nimport {\n  fetchTasks,\n  deleteContact,\n  addContact,\n  findByName,\n} from 'redux/contacts/operation';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const HomePage = () => {\n  const { items: contacts, isLoading, error } = useSelector(getContacts);\n  const { isAuth } = useSelector(getAuth);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n\n  const onInputContact = user => {\n    if (contacts.some(contact => contact.name === user.name)) {\n      return alert(`${user.name} is already in contacts.`);\n    }\n    dispatch(addContact(user));\n  };\n\n  const findByNameFilter = value => {\n    const name = value.trim().toLocaleLowerCase();\n    dispatch(findByName(name));\n  };\n  const onClickDelete = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <main>\n      {isAuth && (\n        <>\n          <Section title=\"PhoneBook\">\n            <PhoneBookForm onInputContact={onInputContact} />\n          </Section>\n\n          <Section title=\"Contacts\">\n            <InputSearch\n              nameSearch=\"Find contacts by name\"\n              onSearchName={findByNameFilter}\n            />\n            <div\n              style={{\n                width: 'fit-content',\n                margin: ' 0 auto',\n                position: 'absolute',\n                top: '10px',\n                right: '10px',\n              }}\n            >\n              {isLoading && <Loader />}\n            </div>\n            <p>{error}</p>\n            <ContactsList\n              onClickDelete={onClickDelete}\n              contacts={filter === '' ? contacts : filter}\n            />\n          </Section>\n        </>\n      )}\n    </main>\n  );\n};\n","export const getAuth = state => state.auth;\n"],"names":["Form","styled","Button","Ul","Li","Label","Span","Input","mainTitle","type","name","title","pattern","handleChange","value","onChange","required","onInputContact","useState","setName","phone","setPhone","evt","target","onSubmit","e","preventDefault","number","defaultValue","contacts","onClickDelete","length","map","contact","style","margin","onClick","id","SectionStyled","TitleSection","children","nameSearch","onSearchName","placeholder","getContacts","state","getFilter","filter","Loader","strokeColor","strokeWidth","animationDuration","width","visible","HomePage","useSelector","items","isLoading","error","isAuth","getAuth","dispatch","useDispatch","useEffect","fetchTasks","user","some","alert","addContact","trim","toLocaleLowerCase","findByName","position","top","right","deleteContact","auth"],"sourceRoot":""}