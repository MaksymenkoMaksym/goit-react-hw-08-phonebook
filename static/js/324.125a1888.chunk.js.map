{"version":3,"file":"static/js/324.125a1888.chunk.js","mappings":"4YAmBA,SAASA,EAAUC,GACjB,OACE,UAAC,KAAD,gBACEC,QAAQ,QACRC,MAAM,iBACNC,MAAM,UACFH,GAJN,cAMG,kBACD,SAAC,IAAD,CAAME,MAAM,UAAUE,KAAK,uCAA3B,qBAEQ,KACP,IAAIC,MAAOC,cACX,OAGN,CAED,IAAMC,GAAQC,EAAAA,EAAAA,KAEC,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAiCC,EAAAA,EAAAA,WAAS,GAA1C,eAAOC,EAAP,KAAkBC,EAAlB,KAWA,OACE,SAAC,IAAD,CAAeP,MAAOA,EAAtB,UACE,UAAC,KAAD,CAAMQ,WAAS,EAACC,UAAU,OAAOC,GAAI,CAAEC,OAAQ,QAA/C,WACE,SAAC,KAAD,KACA,SAAC,KAAD,CACEC,MAAI,EACJC,IAAI,EACJC,GAAI,EACJC,GAAI,EACJL,GAAI,CACFM,gBAAiB,0CACjBC,iBAAkB,YAClBC,gBAAiB,SAAAC,GAAC,MACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,IAHH,EAIlBC,eAAgB,QAChBC,mBAAoB,aAGxB,SAAC,KAAD,CAAMZ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGN,UAAWgB,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAvE,UACE,UAAC,IAAD,CACEjB,GAAI,CACFkB,GAAI,EACJC,GAAI,EACJC,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,SAAC,IAAD,CAAQtB,GAAI,CAAEuB,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAAC,IAAD,OAEF,SAAC,IAAD,CAAYzB,UAAU,KAAKf,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACEe,UAAU,OACV0B,YAAU,EACVC,SAjDS,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAO,IAAIC,SAASH,EAAMI,eAC1BC,EAAY,CAChBC,MAAOJ,EAAKK,IAAI,SAChBC,SAAUN,EAAKK,IAAI,aAErBzC,GAAS2C,EAAAA,EAAAA,IAAUJ,GACpB,EA0CWhC,GAAI,CAAEqC,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAAC,IAAD,CACEP,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAEf,SAAC,IAAD,CACEG,SACE,SAAC,IAAD,CACEC,MAAM,oBACN/D,MAAM,UACNgE,QAASrD,EACTsD,SAAU,WACRrD,GAAY,SAAAsD,GAAS,OAAKA,CAAL,GACtB,EACDC,WAAY,CAAE,aAAc,gBAGhCV,MAAM,uBAER,SAAC,IAAD,CACEI,KAAK,SACLN,WAAS,EACTxD,QAAQ,YACRgB,GAAI,CAAEqC,GAAI,EAAGgB,GAAI,GACjBC,UAAW1D,EALb,sBASA,SAAC,KAAD,CAAME,WAAS,EAAf,UACE,SAAC,KAAD,CAAMI,MAAI,EAAV,UACE,SAAC,KAAD,CACEqD,MAAO,CACLjB,OAAQ,IACRkB,WAAY,oCACZC,WAAY,MACZC,SAAU,WACVC,WAAY,OACZC,cAAe,YACf3E,MAAO,WACP4E,qBAAsB,YACtBC,eAAgB,YAChBC,oBAAqB,4BAEvBC,GAAG,UACHhF,QAAQ,QAdV,SAgBG,wCAIP,SAACF,EAAD,CAAWkB,GAAI,CAAEqC,GAAI,iBAOlC,C","sources":["pages/Auth.jsx"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/auth/authOperation';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {'Copyright Â©'}\n      <Link color=\"inherit\" href=\"https://github.com/MaksymenkoMaksym/\">\n        Git Hub\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme();\n\nexport default function SignInSide() {\n  const dispatch = useDispatch();\n  const [isDisable, setDisabled] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const userLogin = {\n      email: data.get('email'),\n      password: data.get('password'),\n    };\n    dispatch(logInUser(userLogin));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid container component=\"main\" sx={{ height: '90vh' }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: t =>\n              t.palette.mode === 'light'\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              noValidate\n              onSubmit={handleSubmit}\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    value=\"Glory for Ukraine\"\n                    color=\"primary\"\n                    checked={isDisable}\n                    onChange={() => {\n                      setDisabled(prevState => !prevState);\n                    }}\n                    inputProps={{ 'aria-label': 'controlled' }}\n                  />\n                }\n                label=\"Glory for Ukraine\"\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n                disabled={!isDisable}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <NavLink\n                    style={{\n                      margin: '0',\n                      fontFamily: 'Roboto,Helvetica,Arial,sans-serif',\n                      fontWeight: '400',\n                      fontSize: '0.875rem',\n                      lineHeight: '1.43',\n                      letterSpacing: '0.01071em',\n                      color: ' #1976d2',\n                      WebkitTextDecoration: 'underline',\n                      textDecoration: 'underline',\n                      textDecorationColor: ' rgba(25, 118, 210, 0.4)',\n                    }}\n                    to=\"/signUp\"\n                    variant=\"body2\"\n                  >\n                    {\"Don't have an account? Sign Up\"}\n                  </NavLink>\n                </Grid>\n              </Grid>\n              <Copyright sx={{ mt: 5 }} />\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}\n"],"names":["Copyright","props","variant","color","align","href","Date","getFullYear","theme","createTheme","SignInSide","dispatch","useDispatch","useState","isDisable","setDisabled","container","component","sx","height","item","xs","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","m","bgcolor","noValidate","onSubmit","event","preventDefault","data","FormData","currentTarget","userLogin","email","get","password","logInUser","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","control","value","checked","onChange","prevState","inputProps","mb","disabled","style","fontFamily","fontWeight","fontSize","lineHeight","letterSpacing","WebkitTextDecoration","textDecoration","textDecorationColor","to"],"sourceRoot":""}