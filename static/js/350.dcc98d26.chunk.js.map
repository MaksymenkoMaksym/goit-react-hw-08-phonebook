{"version":3,"file":"static/js/350.dcc98d26.chunk.js","mappings":"4OASaA,EAAkB,SAAC,GAAgD,IAAnCC,EAAkC,EAA7CC,UAA6C,IAAvBC,WAAAA,OAAuB,MAAV,IAAU,EAE7E,OADmBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAvBC,QACQ,SAAC,KAAD,CAAUC,GAAIJ,IAAiBF,CAChD,C,sDCZM,IAAMI,EAAU,SAAAG,GAAK,OAAIA,EAAMC,IAAV,C","sources":["components/RestrictedRoute/RestrictedRoute.jsx","redux/auth/selectorsAuth.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getAuth } from 'redux/auth/selectorsAuth';\n\n/**\n * - If the route is restricted and the user is logged in, render a <Navigate> to redirectTo\n * - Otherwise render the component\n */\n\nexport const RestrictedRoute = ({ component: Component, redirectTo = '/' }) => {\n  const { isAuth } = useSelector(getAuth);\n  return isAuth ? <Navigate to={redirectTo} /> : Component;\n};\n","export const getAuth = state => state.auth;\n"],"names":["RestrictedRoute","Component","component","redirectTo","useSelector","getAuth","isAuth","to","state","auth"],"sourceRoot":""}