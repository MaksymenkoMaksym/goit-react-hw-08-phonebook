{"version":3,"file":"static/js/128.8a67ca51.chunk.js","mappings":"yOASaA,EAAe,SAAC,GAAgD,IAAnCC,EAAkC,EAA7CC,UAA6C,IAAvBC,WAAAA,OAAuB,MAAV,IAAU,EAG1E,OAFmBC,EAAAA,EAAAA,IAAYC,EAAAA,GAAvBC,OAEQL,GAAY,SAAC,KAAD,CAAUM,GAAIJ,GAC3C,C,sDCbM,IAAME,EAAU,SAAAG,GAAK,OAAIA,EAAMC,IAAV,C","sources":["components/PrivateRoute/PrivateRoute.jsx","redux/auth/selectorsAuth.js"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { getAuth } from 'redux/auth/selectorsAuth';\n\n/**\n * - If the route is private and the user is logged in, render the component\n * - Otherwise render <Navigate> to redirectTo\n */\n\nexport const PrivateRoute = ({ component: Component, redirectTo = '/' }) => {\n  const { isAuth } = useSelector(getAuth);\n  //   const shouldRedirect = !isLoggedIn && !isRefreshing;\n  return isAuth ? Component : <Navigate to={redirectTo} />;\n};\n","export const getAuth = state => state.auth;\n"],"names":["PrivateRoute","Component","component","redirectTo","useSelector","getAuth","isAuth","to","state","auth"],"sourceRoot":""}